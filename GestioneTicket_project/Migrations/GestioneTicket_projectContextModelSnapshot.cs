// <auto-generated />
using System;
using GestioneTicket_project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestioneTicket_project.Migrations
{
    [DbContext(typeof(GestioneTicket_projectContext))]
    partial class GestioneTicket_projectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestioneTicket_project.Models.LavorazioneTicket", b =>
                {
                    b.Property<int>("LavorazioneTicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ticket_lavorazione");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LavorazioneTicketId"));

                    b.Property<DateTime>("Data_presa_incarico")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_presa_incarico");

                    b.Property<string>("Ora_presa_incarico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ora_presa_incarico");

                    b.Property<int>("TicketId")
                        .HasColumnType("int")
                        .HasColumnName("id_ticket");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int")
                        .HasColumnName("id_utente");

                    b.Property<string>("motivazione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("motivazione");

                    b.HasKey("LavorazioneTicketId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UtenteId");

                    b.ToTable("LavorazioneTicket");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Prodotto", b =>
                {
                    b.Property<int>("Id_prodotto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_prodotto"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_tipo_prodotto")
                        .HasColumnType("int");

                    b.Property<int>("TipologiaProdottoId_tipologia_prodotto")
                        .HasColumnType("int");

                    b.HasKey("Id_prodotto");

                    b.HasIndex("TipologiaProdottoId_tipologia_prodotto");

                    b.ToTable("Prodotto");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Ticket", b =>
                {
                    b.Property<int?>("Id_ticket")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id_ticket"));

                    b.Property<DateTime?>("Data_apertura")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_apertura");

                    b.Property<DateTime?>("Data_chiusura")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_chiusura");

                    b.Property<string>("Descrizione")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("descrizione");

                    b.Property<string>("Ora_apertura")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ora_apertura");

                    b.Property<string>("Ora_chiusura")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ora_chiusura");

                    b.Property<int?>("ProdottoId")
                        .HasColumnType("int")
                        .HasColumnName("prodotto_id");

                    b.Property<string>("Soluzione")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("soluzione");

                    b.Property<int?>("Stato")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("UtenteId")
                        .HasColumnType("int")
                        .HasColumnName("utente_id");

                    b.HasKey("Id_ticket");

                    b.HasIndex("ProdottoId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.TipologiaProdotto", b =>
                {
                    b.Property<int>("Id_tipologia_prodotto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_tipologia_prodotto"));

                    b.Property<string>("Descrizione")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_tipologia_prodotto");

                    b.ToTable("TipologiaProdotto");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Utente", b =>
                {
                    b.Property<int>("Id_utente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_utente"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Ruolo")
                        .HasColumnType("int");

                    b.HasKey("Id_utente");

                    b.ToTable("Utente");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.LavorazioneTicket", b =>
                {
                    b.HasOne("GestioneTicket_project.Models.Ticket", "Ticket")
                        .WithMany("Lavorazioni_ticket")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestioneTicket_project.Models.Utente", "Utente")
                        .WithMany("Lavorazioni_ticket")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Prodotto", b =>
                {
                    b.HasOne("GestioneTicket_project.Models.TipologiaProdotto", "TipologiaProdotto")
                        .WithMany("Prodotti")
                        .HasForeignKey("TipologiaProdottoId_tipologia_prodotto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipologiaProdotto");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Ticket", b =>
                {
                    b.HasOne("GestioneTicket_project.Models.Prodotto", "Prodotto")
                        .WithMany("Tickets")
                        .HasForeignKey("ProdottoId");

                    b.HasOne("GestioneTicket_project.Models.Utente", "Utente")
                        .WithMany("Tickets")
                        .HasForeignKey("UtenteId");

                    b.Navigation("Prodotto");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Prodotto", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Ticket", b =>
                {
                    b.Navigation("Lavorazioni_ticket");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.TipologiaProdotto", b =>
                {
                    b.Navigation("Prodotti");
                });

            modelBuilder.Entity("GestioneTicket_project.Models.Utente", b =>
                {
                    b.Navigation("Lavorazioni_ticket");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
